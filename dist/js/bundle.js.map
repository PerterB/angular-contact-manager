{"version":3,"sources":["root.module.js","common/app.module.js","components/components.module.js","components/auth/auth.module.js","components/contact/contact.module.js","root.component.js","common/app-nav.component.js","common/app-sidebar.component.js","common/app-sidebar.controller.js","common/app.component.js","common/app.controller.js","components/auth/auth.service.js","components/contact/contact-service.js","components/auth/auth-form/auth-form.component.js","components/auth/auth-form/auth-form.controller.js","components/auth/login/login.component.js","components/auth/login/login.controller.js","components/auth/register/register.component.js","components/auth/register/register.controller.js","components/contact/contact-detail/contact-detail.component.js","components/contact/contact-detail/contact-detail.controller.js","components/contact/contact-edit/contact-edit.component.js","components/contact/contact-edit/contact-edit.controller.js","components/contact/contact-new/contact-new.component.js","components/contact/contact-new/contact-new.controller.js","components/contact/contacts/contacts.component.js","components/contact/contacts/contacts.controller.js","components/contact/contact-tag/contact-tag.component.js","components/contact/contact-tag/contact-tag.controller.js","templates.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["angular\n  .module('root', [\n    'common',\n    'components',\n    'templates'\n  ]);\n","angular\n  .module('common', [\n    'ui.router',\n    'angular-loading-bar'\n  ])\n  .run(function($transitions, cfpLoadingBar){\n    $transitions.onStart({}, cfpLoadingBar.start);\n    $transitions.onSuccess({}, cfpLoadingBar.complete);\n  })\n","angular\n  .module('components', [\n    'components.contact',\n    'components.auth'\n  ]);\n","angular\n  .module('components.auth', [\n    'ui.router',\n    'firebase'\n  ]).config(function($firebaseRefProvider){\n  var config = {\n      apiKey: \"AIzaSyBF-WCC5  KqDsZ1C2kGkTa5WXwacDq9cEA4\",\n      authDomain: \"contact-manager-dd6c5.firebaseapp.com\",\n      databaseURL: \"https://contact-manager-dd6c5.firebaseio.com\",\n      storageBucket: \"contact-manager-dd6c5.appspot.com\",\n      messagingSenderId: \"49362835449\"\n  };\n  $firebaseRefProvider.registerUrl({\n    default:config.databaseURL,\n    contacts:config.databaseURL+'/contacts',\n  })\n  firebase.initializeApp(config);\n}).run(function($transitions, $state, AuthService ){\n    $transitions.onStart ({\n      to : function (state){\n        return !!(state.data && state.data.requiredAuth);\n      }\n    }, function() {\n        return AuthService\n          .requireAuthentication()\n          .catch(function(){\n            return $state.target('auth.login');\n          });\n      });\n    $transitions.onStart({\n      to: 'auth.*'\n    }, function () {\n        if (AuthService.isAuthenticated ()) {\n          return $state.target('app');\n        }\n    });\n\n});\n\n\n","angular\n  .module('components.contact', [\n    'ui.router'\n  ]);\n","var root = {\n  templateUrl: './root.html'\n};\n\nangular\n  .module('root')\n  .component('root', root);\n","var appNav  = {\n  bindings:{\n    user:'<',\n    onLogout:'&'\n  },\n  templateUrl: './app-nav.html'\n}\n\nangular.module('common')\n    .component('appNav', appNav)\n","var sidebar = {\n  templateUrl:'./app-sidebar.html',\n  bindings:{},\n  controller:'AppSideBarController'\n}\nangular\n  .module('common')\n  .component('appSidebar', sidebar);\n","function SideBarController(){\n\n  var ctrl = this;\n  ctrl.contactTags = [\n    {\n      label:'All Contacts',\n      icon: 'star'\n    },\n    {\n      label:'Friends',\n      icon: 'people'\n    },\n    {\n      label:'Family',\n      icon: 'child_care'\n    },\n    {\n      label:'Acquaintances',\n      icon: 'accessibility'\n    },\n    {\n      label:'Following',\n      icon: 'remove_red_eye'\n    }\n  ]\n\n}\n\nangular\n  .module('common')\n  .controller('AppSideBarController', SideBarController)\n","var app = {\n  templateUrl : './app.html',\n  controller: 'AppController'\n}\n\nangular.module('common')\n.component ('app', app)\n  .config(function ($stateProvider){\n    $stateProvider\n      .state('app', {\n        url : '/app',\n        data: {\n          requiredAuth : true\n        },\n        component: 'app',\n        redirectTo:'contacts'\n      })\n  });\n","function AppController (AuthService, $state) {\n  var ctrl = this;\n   ctrl.user = AuthService.getUser();\n  ctrl.logout = function(){\n    AuthService.logout().then(function(){\n      $state.go('auth.login');\n    })\n  }\n}\n\n\nangular\n  .module('common')\n  .controller ('AppController', AppController);\n","function AuthService($firebaseAuth){\n  var auth = $firebaseAuth();\n  var authData = null;\n  function clearAuthData(){\n    authData = null;\n  }\n  function storeAuthData(response) {\n    authData = response;\n    return authData;\n  }\n  function onSignIn(user) {\n    authData = user;\n    return auth.$requireSignIn();\n  }\n  this.register  = function(user){\n    console.log(user);\n    return auth\n      .$createUserWithEmailAndPassword(user.email, user.password)\n      .then(storeAuthData);\n  }\n  this.login = function (user) {\n    return auth\n      .$signInWithEmailAndPassword(user.email, user.password)\n      .then(storeAuthData);\n  }\n\n  this.requireAuthentication = function () {\n    return auth\n      .$waitForSignIn().then( onSignIn );\n  }\n\n  this.isAuthenticated = function () {\n    return !!authData;\n  }\n\n  this.getUser = function () {\n    if (authData) {\n      return authData\n    }\n  }\n\n  this.logout = function(){\n    return auth.$signOut().then(clearAuthData)\n  }\n}\nangular\n  .module('components.auth')\n  .service('AuthService', AuthService);\n","function ContactService (AuthService, $firebaseRef, $firebaseArray, $firebaseObject ){\n  var ref = $firebaseRef.contacts;\n  var uid = AuthService.getUser().uid;\n\n  function createNewContact (contact) {\n    return $firebaseArray(ref.child(uid)).$add(contact);\n  }\n\n  function getContactById (id){\n    return $firebaseObject(ref.child(uid).child(id));\n  }\n\n  function updateContact (contact) {\n    return contact.$save();\n  }\n\n  function deleteContact (contact) {\n    return contact.$remove();\n  }\n\n  function getContactList () {\n    return $firebaseArray (ref.child(uid));\n  }\n  return {\n    createNewContact: createNewContact,\n    updateContact: updateContact,\n    deleteContact: deleteContact,\n    getContactById: getContactById,\n    getContactList: getContactList\n  }\n\n}\n\n\nangular\n  .module('common')\n  .factory('ContactService', ContactService);\n\n","var authForm = {\n  bindings:{\n    user:'<',\n    button:'@',\n    message:'@',\n    onSubmit:'&'\n  },\n  templateUrl:'./auth-form.html',\n  controller:'AuthFormController'\n};\nangular\n  .module('components.auth')\n  .component('authForm', authForm);\n\n// user = \"$ctrl.user\"\n// message=\"{{$ctrl.error}}\"\n// button=\"Create user\"\n// on-submit=\"$ctrl.createUser($event);\">\n","function AuthFormController(){\n  var ctrl = this;\n    ctrl.$onChanges = function(changes){\n    if(changes.user){\n      ctrl.user = angular.copy(ctrl.user);\n    }\n  }\n\n  ctrl.submitForm = function(){\n    ctrl.onSubmit({\n      $event:{\n        user: ctrl.user\n      }\n    })\n  }\n}\n\nangular\n  .module('components.auth')\n  .controller('AuthFormController', AuthFormController);\n","var login = {\n  templateUrl:'./login.html',\n  controller: 'LoginController'\n}\n\nangular\n  .module('components.auth')\n  .component('login', login)\n  .config(function($stateProvider, $urlRouterProvider){\n    $stateProvider\n      .state('auth',{\n        redirectTo:'auth.login',\n        url:'/auth',\n        template:'<div ui-view></div>'\n      })\n      .state('auth.login',{\n        url:'/login',\n        component:'login'\n      });\n    $urlRouterProvider.otherwise('auth/login');\n\n  });\n","function LoginController(AuthService, $state){\n  var ctrl = this;\n  ctrl.$onInit = function(){\n    ctrl.error = null;\n    ctrl.user = {\n      email:'',\n      password:''\n    };\n  };\n\n  ctrl.loginUser = function(event){\n    return AuthService\n      .login(event.user)\n      .then(function(){\n        $state.go('app');\n      }, function(reason){\n        ctrl.error = reason.message;\n      })\n\n  }\n}\n\nangular\n  .module('components.auth')\n  .controller('LoginController', LoginController);\n","var register = {\n  templateUrl:'./register.html',\n  controller:'Register'\n}\nangular\n  .module('components.auth')\n  .component('register', register)\n  .config(function($stateProvider){\n    $stateProvider\n      .state('auth.register',{\n        url:'/register',\n        component:'register'\n\n      })\n\n  })\n","function Register(AuthService, $state){\n  var ctrl = this;\n  ctrl.$onInit = function(){\n    ctrl.error = null;\n    ctrl.user = {\n      email:'',\n      password:''\n    };\n  };\n\n  ctrl.createUser = function(event){\n    return AuthService\n            .register(event.user)\n      .then(function(){\n        console.log('Success');\n        //fully authorized\n        $state.go('app');\n      }, function(reason){\n        ctrl.error = reason.message;\n      })\n\n  }\n}\nangular\n  .module('components.auth')\n  .controller('Register', Register);\n","var contactDetail = {\n  bindings:{\n    contact:'<',\n    onSave:'&',\n    onUpdate: '&',\n    onDelete: '&'\n  },\n  templateUrl : './contact-detail.html',\n  controller:'ContactDetailController'\n\n}\n\nangular\n  .module('components.contact')\n  .component('contactDetail', contactDetail);\n","function ContactDetailController () {\n  var ctrl = this;\n  ctrl.$onInit = function () {\n     ctrl.isNewContact = !ctrl.contact.$id;\n  }\n  ctrl.saveContact = function () {\n    ctrl.onSave ( {\n      $event : {\n        contact : ctrl.contact\n      }\n    })\n  }\n\n  ctrl.updateContact = function () {\n    ctrl.onUpdate  ( {\n      $event : {\n        contact : ctrl.contact\n      }\n    })\n  }\n\n  ctrl.deleteContact = function () {\n    ctrl.onDelete ( {\n      $event : {\n        contact : ctrl.contact\n      }\n    })\n  }\n\n  ctrl.tagChange  = function (event) {\n    ctrl.contact.tag = event.tag;\n    ctrl.updateContact();\n  }\n}\n\nangular\n  .module('components.contact')\n  .controller ('ContactDetailController', ContactDetailController);\n\n","var contactEdit = {\n  bindings : {\n    contact:'<'\n  },\n  controller : 'ContactEditController',\n  templateUrl: './contact-edit.html'\n}\n\n\n\nangular\n  .module('components.contact')\n  .component('contactEdit', contactEdit)\n  .config ( function ($stateProvider){\n    $stateProvider.state('contact ', {\n      url:'/contact/:id',\n      parent: 'app',\n      component: 'contactEdit',\n      resolve : {\n        contact : function ($transition$, ContactService) {\n          var key = $transition$.params().id;\n          return ContactService.getContactById(key).$loaded();\n          //return\n        }\n      }\n    })\n  });\n","function ContactEditController ($state,  ContactService, cfpLoadingBar, $window) {\n  var ctrl = this;\n  ctrl.updateContact = function (event) {\n    cfpLoadingBar.start();\n    return ContactService\n      .updateContact(event.contact)\n      .then(cfpLoadingBar.complete,  cfpLoadingBar.complete);\n  }\n  ctrl.deleteContact = function (event) {\n    var message = 'Delete' + event.contact.name + ' from contacts';\n    if( $window.confirm (message)){\n      return ContactService\n        .deleteContact (event.contact)\n        .then (function () {\n          $state.go ('contacts');\n        })\n    }\n\n  }\n}\n\nangular\n  .module('components.contact')\n  .controller('ContactEditController', ContactEditController)\n","var contactNew = {\n  templateUrl : \"./contact-new.html\",\n  controller: \"ContactNewController\"\n};\n\nangular\n  .module('components.contact')\n  .component('contactNew', contactNew)\n  .config(function($stateProvider){\n    $stateProvider.state('new', {\n      parent:'app',\n      url: '/new',\n      component:'contactNew'\n    });\n  })\n;\n","function ContactNewController (ContactService, $state){\n  var ctrl = this;\n  ctrl.$onInit = function (){\n    ctrl.contact = {\n      name: '',\n      email: '',\n      job: '',\n      location: '',\n      social : {\n        facebook: '',\n         github: '',\n        twitter: '',\n        linkedin: ''\n      },\n      tag: 'none ',\n    }\n  }\n  ctrl.createNewContact = function (event){\n    ContactService.createNewContact(event.contact)\n      .then(function (contact) {\n        console.log(contact.key);\n        $state.go ('contact',{\n          id: contact.key\n        });\n      })\n    //ctrl.contact\n  }\n}\n\nangular\n  .module('components.contact')\n  .controller('ContactNewController', ContactNewController);\n","var contacts = {\n  bindings: {\n    contacts:'<'\n  },\n  templateUrl:'./contacts.html',\n  controller: 'ContactsController'\n};\nangular\n  .module('components.contact')\n  .component('contacts', contacts)\n  .config(function($stateProvider){\n    $stateProvider.state('contacts', {\n      parent:'app',\n      url:'/contacts',\n      component: 'contacts',\n      resolve:{\n        contacts: function (ContactService){\n          return ContactService.getContactList().$loaded();\n        }\n      }\n    })\n  });\n","function ContactsController () {\n  var ctrl = this;\n  ctrl.goToContact = function(event) {\n    $state.go ('contact', {id: event.contactId });\n  }\n}\n\nangular\n  .module('components.contact')\n  .controller('ContactsController', ContactsController);\n","var contactTag = {\n  bindings:{\n    tag: '<',\n    onChange:'&'\n  },\n  templateUrl: './contact-tag.html',\n  controller: 'ContactTagController'\n}\n\nangular\n  .module('components.contact')\n  .component('contactTag', contactTag);\n","function ContactTagController (){\n  var ctrl = this;\n  ctrl.$onInit = function () {\n    ctrl.tags = [\n      'friends', 'family', 'following', 'acquaintaances'\n    ];\n  };\n\n  ctrl.$onChanges = function (changes) {\n    if (changes.tag) {\n      ctrl.tag = angular.copy(ctrl.tag)\n    }\n  }\n\n  ctrl.updateTag = function (tag) {\n    ctrl.onChange ({\n      $event:{\n         tag : tag\n      }\n    })\n  }\n}\n\nangular\n  .module('components.contact')\n  .controller('ContactTagController', ContactTagController);\n","angular.module('templates', []).run(['$templateCache', function($templateCache) {$templateCache.put('./root.html','<div class=\"root\"><div ui-view></div></div>');\n$templateCache.put('./app-nav.html','<header class=\"header\"><div class=\"header__fixed\"><div><div class=\"header__brand\">Contacts <a ui-sref=\"new\" class=\"header__button header__button--new-contact\"><i class=\"material-icons\">add_circle_outline</i> New Contact</a></div><div class=\"header__logout\">{{::$ctrl.user.email }} <a href=\"\" ng-click=\"$ctrl.onLogout()\"><span class=\"header__button\"><i class=\"material-icons\">power_settings_new </i>Logout</span></a></div></div></div></header>');\n$templateCache.put('./app-sidebar.html','<aside class=\"sidebar\"><div class=\"sidebar__logo\"><a href=\"\"><img src=\"/img/logo/png\" alt=\"\"></a></div><span class=\"sidebar__header\">Tags</span><ul class=\"sidebar__list\"><li class=\"sidebar__item\" ng-repeat=\"item in ::$ctrl.contactTags\"><a href=\"\" class=\"sidebar__link\"><i class=\"material-icons\">{{ ::item.icon }} </i>{{ ::item.label }}</a></li></ul></aside>');\n$templateCache.put('./app.html','<div class=\"root\"><app-nav user=\"$ctrl.user\" on-logout=\"$ctrl.logout\"></app-nav><app-sidebar></app-sidebar><div class=\"app\" ui-view></div></div>');\n$templateCache.put('./auth-form.html','<form name=\"authForm\" novalidate ng-submit=\"$ctrl.submitForm();\"><label><input type=\"email\" name=\"email\" required=\"required\" placeholder=\"Enter your email\" ng-model=\"$ctrl.user.email\"></label><label><input type=\"password\" name=\"password\" required=\"required\" placeholder=\"Enter your password\" ng-model=\"$ctrl.user.password \"></label><div class=\"auth-button\"><button type=\"submit\" ng-disabled=\"authForm.$invalid\">{{$ctrl.button}}</button></div><div><div ng-if=\"$ctrl.message \">{{$ctrl.message }}</div></div></form>');\n$templateCache.put('./login.html','<div class=\"auth\"><h1>Login</h1><auth-form user=\"$ctrl.user\" message=\"{{$ctrl.error}}\" button=\"Login\" on-submit=\"$ctrl.loginUser($event);\"></auth-form></div><div class=\"auth__info\"><a ui-sref=\"auth.register\">It\\'s your lucky day today. Create account here</a></div>');\n$templateCache.put('./register.html','<div class=\"auth\"><h1>Register</h1><auth-form user=\"$ctrl.user\" message=\"{{$ctrl.error}}\" button=\"Create user\" on-submit=\"$ctrl.createUser($event);\"></auth-form></div><div class=\"auth__info\"><a ui-sref=\"auth.login\">Have an account? Login now</a></div>');\n$templateCache.put('./contact-detail.html','<div class=\"contact\"><form name=\"contactDetailForm\" novalidate><div><span class=\"contact__required\">*</span>field is required</div><div class=\"contact__box\"><h3 class=\"contact__sub-title\">Personal</h3><div class=\"contact__field\"><label>Name <span class=\"contact__required\">*</span></label><input type=\"text\" name=\"name\" required=\"required\" ng-model=\"$ctrl.contact.name\" ng-change=\"$ctrl.updateContact()\" ng-model-options=\"{\\n            \\'updateOn\\' : \\'default blur\\',\\n            \\'debounce\\' : {\\n              \\'default\\': 250,\\n              \\'blur\\': 0\\n            }\\n          }\"></div><div class=\"contact__field\"><label>Email <span class=\"contact__error\" ng-if=\"contactDetailForm.email.$touched && contactDetailForm.email.$error.email\">Must be a valid email</span></label><input type=\"email\" name=\"email \" ng-model=\"$ctrl.contact.email\" ng-model-options=\"{\\n            \\'updateOn\\' : \\'default blur\\',\\n            \\'debounce\\' : {\\n              \\'default\\': 250,\\n              \\'blur\\': 0\\n            }\\n          }\"></div><div class=\"contact__field\"><label>Job</label><input type=\"text\" name=\"jobTitle\" ng-model=\"$ctrl.contact.job\" ng-model-options=\"{\\n            \\'updateOn\\' : \\'default blur\\',\\n            \\'debounce\\' : {\\n              \\'default\\': 250,\\n              \\'blur\\': 0\\n            }\\n          }\"></div><div class=\"contact__field\"><label>Location</label><input type=\"text\" name=\"location\" ng-model=\"$ctrl.contact.location\" ng-model-options=\"{\\n            \\'updateOn\\' : \\'default blur\\',\\n            \\'debounce\\' : {\\n              \\'default\\': 250,\\n              \\'blur\\': 0\\n            }\\n          }\"></div></div><div class=\"contact__box contact__box--no-margin\"><h3 class=\"contact__sub-title\">Social</h3><div class=\"contact__field\"><label>Facebook</label><input type=\"text\" name=\"facebook\" ng-model=\"$ctrl.contact.social.facebook\" ng-model-options=\"{\\n            \\'updateOn\\' : \\'default blur\\',\\n            \\'debounce\\' : {\\n              \\'default\\': 250,\\n              \\'blur\\': 0\\n            }\\n          }\"></div><div class=\"contact__field\"><label>Github</label><input type=\"text\" name=\"github\" ng-model=\"$ctrl.contact.social.github\" ng-model-options=\"{\\n            \\'updateOn\\' : \\'default blur\\',\\n            \\'debounce\\' : {\\n              \\'default\\': 250,\\n              \\'blur\\': 0\\n            }\\n          }\"></div><div class=\"contact__field\"><label>Twitter</label><input type=\"text\" name=\"twitter\" ng-model=\"$ctrl.contact.social.twitter\" ng-model-options=\"{\\n            \\'updateOn\\' : \\'default blur\\',\\n            \\'debounce\\' : {\\n              \\'default\\': 250,\\n              \\'blur\\': 0\\n            }\\n          }\"></div><div class=\"contact__field\"><label>Linkedin</label><input type=\"text\" name=\"linkedIn\" ng-model=\"$ctrl.contact.social.linkedIn\" ng-model-options=\"{\\n            \\'updateOn\\' : \\'default blur\\',\\n            \\'debounce\\' : {\\n              \\'default\\': 250,\\n              \\'blur\\': 0\\n            }\\n          }\"></div></div><contact-tag tag=\"$ctrl.contact.tag\" on-change=\"$ctrl.tagChange($event);\"></contact-tag><div ng-if=\"$ctrl.isNewContact\"><button ng-disabled=\"contactDetailForm.$invalid\" ng-click=\"$ctrl.saveContact();\">Create Contact</button></div><div ng-if=\"!$ctrl.isNewContact\"><button class=\"delete\" ng-click=\"$ctrl.deleteContact();\">Delete Contact</button></div></form></div>');\n$templateCache.put('./contact-edit.html','<contact-detail contact=\"$ctrl.contact\" on-delete=\"$ctrl.deleteContact($event);\" on-update=\"$ctrl.updateContact($event);\"></contact-detail>');\n$templateCache.put('./contact-new.html','<contact-detail contact=\"$ctrl.contact\" on-save=\"$ctrl.createNewContact($event);\"></contact-detail>');\n$templateCache.put('./contact-tag.html','<div class=\"contact__field contact__field--long\"><label>Tag</label><ul><li class=\"contact-card__pill contact-card__pill--{{ tag }}\" ng-repeat=\"tag in ::$ctrl.tags\" ng-class=\"{\\n      \\'contact__pill--active\\': $ctrl.tag == tag\\n    }\"><a href=\"\" ng-click=\"$ctrl.updateTag(tag);\">{{::tag}}</a></li></ul></div>');\n$templateCache.put('./contacts.html','<div class=\"contacts\"><ul class=\"contacts-list\"><li ng-repeat=\"contact in $ctrl.contacts\">{{contact}}</li></ul><div class=\"contacts__empty\" ng-if=\"!$ctrl.contacts.length\"><i class=\"material-icons\">face There is no one here yet</i></div></div>');}]);"]}